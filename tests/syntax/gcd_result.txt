syntax-tree
  fn-def <4:1-17:1>
    "main" <4:4-4:7>
    no-return-type
    params-paren <4:8-4:9>
    no-param
    Block <4:11-17:1>
      LoopStmt <6:5-16:5>
        Label #1 <6:5-6:10>
        'loop' <6:12-6:15>
        Block <6:17-16:5>
          SimpleExprStmt <7:9-7:35>
            FnCall <7:9-7:34>
              Ident "writeln" <7:9-7:15>
              paren <7:16-7:34>
              Literal #2 <7:17-7:33>
          VarDecl var <8:9-8:27>
            "a" <8:13-8:13>
            FnCall <8:17-8:26>
              Ident "read_i32" <8:17-8:24>
              paren <8:25-8:26>
              (empty)
          VarDecl var <9:9-9:27>
            "b" <9:13-9:13>
            FnCall <9:17-9:26>
              Ident "read_i32" <9:17-9:24>
              paren <9:25-9:26>
              (empty)
          IfStmt <11:9-13:9>
            IfClause <11:9-13:9>
              BinaryExpr <11:12-11:27>
                BinaryExpr <11:12-11:17>
                  Ident "a" <11:12-11:12>
                  "==" <11:14-11:15>
                  Literal (i32)0 <11:17-11:17>
                "&&" <11:19-11:20>
                BinaryExpr <11:22-11:27>
                  Ident "b" <11:22-11:22>
                  "==" <11:24-11:25>
                  Literal (i32)0 <11:27-11:27>
              Then
              Block <11:29-13:9>
                BreakStmt <12:13-12:24>
                  To @#1 <12:19-12:23>
          SimpleExprStmt <15:9-15:101>
            FnCall <15:9-15:100>
              Ident "writeln" <15:9-15:15>
              paren <15:16-15:100>
              BinaryExpr <15:17-15:99>
                BinaryExpr <15:17-15:73>
                  BinaryExpr <15:17-15:63>
                    BinaryExpr <15:17-15:47>
                      BinaryExpr <15:17-15:40>
                        Literal #7 <15:17-15:24>
                        "+" <15:26-15:26>
                        FnCall <15:28-15:40>
                          MemberAccess <15:28-15:38>
                            Ident "a" <15:28-15:28>
                            "." <15:29-15:29>
                            Ident "to_string" <15:30-15:38>
                          paren <15:39-15:40>
                          (empty)
                      "+" <15:42-15:42>
                      Literal #9 <15:44-15:47>
                    "+" <15:49-15:49>
                    FnCall <15:51-15:63>
                      MemberAccess <15:51-15:61>
                        Ident "b" <15:51-15:51>
                        "." <15:52-15:52>
                        Ident "to_string" <15:53-15:61>
                      paren <15:62-15:63>
                      (empty)
                  "+" <15:65-15:65>
                  Literal #10 <15:67-15:73>
                "+" <15:75-15:75>
                FnCall <15:77-15:99>
                  MemberAccess <15:77-15:97>
                    FnCall <15:77-15:87>
                      Ident "最大公约数" <15:77-15:81>
                      paren <15:82-15:87>
                      Ident "a" <15:83-15:83>
                      Ident "b" <15:86-15:86>
                    "." <15:88-15:88>
                    Ident "to_string" <15:89-15:97>
                  paren <15:98-15:99>
                  (empty)
  fn-def <19:1-28:1>
    "最大公约数" <19:4-19:8>
return     TypeUse simple <19:29-19:31>
      "i32" <19:29-19:31>
    params-paren <19:9-19:24>
    param #4 <19:10-19:10>
      TypeUse simple <19:13-19:15>
        "i32" <19:13-19:15>
    param #6 <19:18-19:18>
      TypeUse simple <19:21-19:23>
        "i32" <19:21-19:23>
    Block <19:33-28:1>
      IfStmt <20:5-22:5>
        IfClause <20:5-22:5>
          BinaryExpr <20:8-20:13>
            Ident "b" <20:8-20:8>
            "==" <20:10-20:11>
            Literal (i32)0 <20:13-20:13>
          Then
          Block <20:15-22:5>
            ReturnStmt some <21:9-21:17>
              Ident "a" <21:16-21:16>
      IfStmt <23:5-27:5>
        IfClause <23:5-25:5>
          BinaryExpr <23:8-23:12>
            Ident "a" <23:8-23:8>
            "<" <23:10-23:10>
            Ident "b" <23:12-23:12>
          Then
          Block <23:14-25:5>
            ReturnStmt some <24:9-24:27>
              FnCall <24:16-24:26>
                Ident "最大公约数" <24:16-24:20>
                paren <24:21-24:26>
                Ident "b" <24:22-24:22>
                Ident "a" <24:25-24:25>
        ElseClause <25:7-27:5>
          Block <25:12-27:5>
            ReturnStmt some <26:9-26:31>
              FnCall <26:16-26:30>
                Ident "最大公约数" <26:16-26:20>
                paren <26:21-26:30>
                Ident "b" <26:22-26:22>
                BinaryExpr <26:25-26:29>
                  Ident "a" <26:25-26:25>
                  "%" <26:27-26:27>
                  Ident "b" <26:29-26:29>