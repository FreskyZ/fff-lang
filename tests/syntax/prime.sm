
// Get primes

fn get_primes(u32 high_bound) -> [u32] {
    
    var [bool] is_prime = [true; high_bound]; 
    for i in 1..high_bound / 2 + 1 {
        for j in 2..high_bound {
            if i * j < high_bound {
                is_prime[i * j] = false;
            }
        }
    }

    var [u32] ret_val = [0u32; 0]; // because no type infer, should provide type for empty array def
    for i in 1..high_bound {
        if is_prime[i] {
            ret_val.push_back(i);
        }
    }
    return ret_val;
}

fn main() {

    println(get_primes(18) == [2, 3, 5, 7, 11, 13, 15, 17]);
    println(get_primes(10) == [2, 3, 5, 7]);

    const i32 high_bound = read_i32();
    println(get_primes(high_bound));
}