[all(71)] 1760
[lit-expr(10)] 320 (18.18%)
[field-def(5)] 180 (10.23%)
[var-decl-stmt(4)] 160 (9.09%)
[generic-name(4)] 144 (8.18%)
[binary-expr(4)] 144 (8.18%)
[fn-def(2)] 96 (5.45%)
[simple-segment(7)] 84 (4.77%)
[path(5)] 80 (4.55%)
[block(5)] 80 (4.55%)
[primitive-type(6)] 72 (4.09%)
[call-expr(2)] 64 (3.64%)
[struct-def(2)] 40 (2.27%)
[while-stmt(1)] 32 (1.82%)
[ret-stmt(2)] 32 (1.82%)
[unary-expr(1)] 28 (1.59%)
[fn-def-parameter(1)] 28 (1.59%)
[use-stmt(1)] 24 (1.36%)
[loop-stmt(1)] 24 (1.36%)
[if-stmt(1)] 24 (1.36%)
[if-clause(1)] 20 (1.14%)
[tuple-expr(1)] 16 (0.91%)
[ref-type(1)] 16 (0.91%)
[range-right-expr(1)] 16 (0.91%)
[range-left-expr(1)] 16 (0.91%)
[module(1)] 12 (0.68%)
[range-full-expr(1)] 8 (0.45%)
module tests/ast/missing.f3
  var-decl-stmt <3:1-3:16> const full <3:7-3:10>
    range-full-expr <3:14-3:15>
  var-decl-stmt <4:1-4:21> const left <4:7-4:10>
    range-right-expr <4:14-4:20>
      binary-expr <4:16-4:20> + <4:18-4:18>
        lit-expr i32 1 <4:16-4:16>
        lit-expr i32 2 <4:20-4:20>
  var-decl-stmt <5:1-5:24> const right <5:7-5:11>
    range-left-expr <5:15-5:22>
      binary-expr <5:15-5:19> * <5:17-5:17>
        lit-expr i32 3 <5:15-5:15>
        lit-expr i32 5 <5:19-5:19>
  use-stmt <7:1-7:12>
    path <7:5-7:11>
      segment <7:5-7:5> a
      segment <7:8-7:8> b
      segment <7:11-7:11> c
  var-decl-stmt <8:1-8:32> mutable some_tuple <8:5-8:14>
    unary-expr <8:18-8:31> ! <8:18-8:18>
      tuple-expr <8:19-8:31>
        lit-expr str "hello" <8:20-8:26>
        lit-expr i32 42 <8:29-8:30>
  struct-def <10:1-14:1>
    generic-name <10:8-10:13> string <10:8-10:13>
    field-def <11:5-11:12> len <11:5-11:7> : <11:8-11:8>
      primitive-type u64 <11:10-11:12>
    field-def <12:5-12:12> cap <12:5-12:7> : <12:8-12:8>
      primitive-type u64 <12:10-12:12>
    field-def <13:5-13:13> data <13:5-13:8> : <13:9-13:9>
      ref-type <13:11-13:13>
        primitive-type u8 <13:12-13:13>
  if-stmt <16:1-17:1>
    if-clause <16:1-17:1>
      binary-expr <16:4-16:9> != <16:6-16:7>
        lit-expr i32 1 <16:4-16:4>
        lit-expr i32 1 <16:9-16:9>
      block <16:11-17:1>
  loop-stmt <18:1-19:1>
    block <18:6-19:1>
  while-stmt <20:1-21:1>
    lit-expr bool true <20:7-20:10>
    block <20:12-21:1>
  fn-def <23:1-34:1> () <23:8-23:9>
    generic-name <23:4-23:7> main <23:4-23:7>
    block <23:11-34:1>
      struct-def <24:5-27:5>
        generic-name <24:12-24:17> source <24:12-24:17>
        field-def <25:9-25:15> id <25:9-25:10> : <25:11-25:11>
          primitive-type u32 <25:13-25:15>
        field-def <26:9-26:19> src <26:9-26:11> : <26:12-26:12>
          path <26:14-26:19>
            segment <26:14-26:19> string
      fn-def <29:5-31:5> () <29:18-29:25>
        generic-name <29:8-29:17> some_inner <29:8-29:17>
        fn-def-parameter <29:19-29:24> a <29:19-29:19>
          primitive-type i32 <29:22-29:24>
        primitive-type i32 <29:30-29:32>
        block <29:34-31:5>
          ret-stmt <30:9-30:21>
            binary-expr <30:16-30:20> * <30:18-30:18>
              lit-expr i32 2 <30:16-30:16>
              path <30:20-30:20>
                segment <30:20-30:20> a
      ret-stmt <33:5-33:34>
        call-expr <33:12-33:33> () <33:22-33:33>
          path <33:12-33:21>
            segment <33:12-33:21> some_inner
          call-expr <33:23-33:32> () <33:31-33:32>
            path <33:23-33:30>
              segment <33:23-33:30> read_i32
