// fff-lang
// token grammar definition
//
// string => name, cat
// starts with cat for memory of legacy implementation
// attention that => should be surround with at lease 1 space at both side, to distinguish '=>'

seperator:
        '!' =>         LogicalNot, Unary,
       '!=' =>           NotEqual, Equality,
        '#' =>      AttributeSign, Reserved,
        '%' =>                Rem, Multiplicative,
       '%=' =>          RemAssign, Assign,
        '&' =>             BitAnd, BitAnd,
       '&&' =>         LogicalAnd, LogicalAnd,
       '&=' =>       BitAndAssign, Assign,
        '(' =>    LeftParenthenes, Seperator,
        ')' =>   RightParenthenes, Seperator,
        '*' =>                Mul, Multiplicative,
       '*=' =>          MulAssign, Assign,
        '+' =>                Add, Additive,
       '+=' =>          AddAssign, Assign,
        ',' =>              Comma, Seperator,
        '-' =>                Sub, Additive | Unary,
       '-=' =>          SubAssign, Assign,
       '->' =>   NarrowRightArrow, Seperator,
        '.' =>                Dot, Seperator,
       '..' =>              Range, Range,
        '/' =>                Div, Multiplicative,
       '/=' =>          DivAssign, Assign,
        ':' =>              Colon, Seperator,
       '::' => NamespaceSeperator, Seperator,
        ';' =>          SemiColon, Seperator,
        '<' =>               Less, Relational,
       '<<' =>          ShiftLeft, Shift,
      '<<=' =>    ShiftLeftAssign, Assign,
       '<=' =>          LessEqual, Relational,
        '=' =>             Assign, Assign,
       '==' =>              Equal, Equality,
       '=>' =>     WideRightArrow, Reserved,
        '>' =>              Great, Relational,
       '>=' =>         GreatEqual, Relational,
       '>>' =>         ShiftRight, Shift,
      '>>=' =>   ShiftRightAssign, Assign,
        '[' =>        LeftBracket, Seperator,
        ']' =>       RightBracket, Seperator,
        '^' =>             BitXor, BitXor,
       '^=' =>       BitXorAssign, Assign,
        '{' =>          LeftBrace, Seperator,
        '|' =>              BitOr, BitOr,
       '|=' =>        BitOrAssign, Assign,
       '||' =>          LogicalOr, LogicalOr,
        '}' =>         RightBrace, Seperator,
        '~' =>             BitNot, Unary,

keyword:
        '_' =>         Underscore, InUse,
    'break' =>              Break, InUse,
    'const' =>              Const, InUse,
 'continue' =>           Continue, InUse,
     'else' =>               Else, InUse,
    'false' =>              False, InUse,
       'fn' =>                 Fn, InUse,
      'for' =>                For, InUse,
       'if' =>                 If, InUse,
       'in' =>                 In, InUse,
     'loop' =>               Loop, InUse,
   'return' =>             Return, InUse,
     'this' =>               This, InUse,
     'true' =>               True, InUse,
     'type' =>               Type, InUse,
      'var' =>                Var, InUse,
    'while' =>              While, InUse,
       'i8' =>                 I8, Primitive,
       'u8' =>                 U8, Primitive,
      'i16' =>                I16, Primitive,
      'u16' =>                U16, Primitive,
      'i32' =>                I32, Primitive,
      'u32' =>                U32, Primitive,
      'i64' =>                I64, Primitive,
      'u64' =>                U64, Primitive,
      'f32' =>                F32, Primitive,
      'f64' =>                F64, Primitive,
     'char' =>               Char, Primitive,
     'bool' =>               Bool, Primitive,
    'array' =>              Array, Primitive,
   'string' =>             String, Primitive,
    'bits8' =>              Bits8, Reserved,
   'bits16' =>             Bits16, Reserved,
   'bits32' =>             Bits32, Reserved,
   'bits64' =>             Bits64, Reserved,
     'u128' =>               U128, Reserved,
     'i128' =>               I128, Reserved,
     'f128' =>               F128, Reserved,
      'r32' =>                R32, Reserved,
      'r64' =>                R64, Reserved,
     'r128' =>               R128, Reserved,
      'and' =>                And, Reserved,
    'alias' =>              Alias, Reserved,
       'as' =>                 As, Reserved,
    'async' =>              Async, Reserved,
     'auto' =>               Auto, Reserved,
    'await' =>              Await, Reserved,
     'base' =>               Base, Reserved,
    'catch' =>              Catch, Reserved,
    'class' =>              Class, Reserved,
  'closure' =>            Closure, Reserved,
  'concept' =>            Concept, Reserved,
'constexpr' =>          ConstExpr, Reserved,
      'def' =>                Def, Reserved,
  'default' =>            Default, Reserved,
   'delete' =>             Delete, Reserved,
     'enum' =>               Enum, Reserved,
   'except' =>             Except, Reserved,
 'explicit' =>           Explicit, Reserved,
   'extern' =>             Extern, Reserved,
    'final' =>              Final, Reserved,
  'finally' =>            Finally, Reserved,
  'foreach' =>            Foreach, Reserved,
 'function' =>           Function, Reserved,
     'goto' =>               Goto, Reserved,
     'impl' =>               Impl, Reserved,
 'implicit' =>           Implicit, Reserved,
'interface' =>          Interface, Reserved,
 'internal' =>           Internal, Reserved,
       'is' =>                 Is, Reserved,
   'lambda' =>             Lambda, Reserved,
      'let' =>                Let, Reserved,
    'match' =>              Match, Reserved,
      'mod' =>                Mod, Reserved,
   'module' =>             Module, Reserved,
      'mut' =>                Mut, Reserved,
  'mutable' =>            Mutable, Reserved,
'namespace' =>          Namespace, Reserved,
      'new' =>                New, Reserved,
      'nil' =>                Nil, Reserved,
     'none' =>               None, Reserved,
     'null' =>               Null, Reserved,
  'nullptr' =>            Nullptr, Reserved,
   'object' =>             Object, Reserved,
       'or' =>                 Or, Reserved,
      'out' =>                Out, Reserved,
 'override' =>           Override, Reserved,
   'params' =>             Params, Reserved,
     'priv' =>               Priv, Reserved,
  'private' =>            Private, Reserved,
'protected' =>          Protected, Reserved,
      'pub' =>                Pub, Reserved,
   'public' =>             Public, Reserved,
      'ref' =>                Ref, Reserved,
      'ret' =>                Ret, Reserved,
   'sealed' =>             Sealed, Reserved,
   'select' =>             Select, Reserved,
     'self' =>             SMSelf, Reserved,
   'static' =>             Static, Reserved,
   'struct' =>             Struct, Reserved,
    'super' =>              Super, Reserved,
   'switch' =>             Switch, Reserved,
 'template' =>           Template, Reserved,
     'then' =>               Then, Reserved,
    'throw' =>              Throw, Reserved,
    'trait' =>              Trait, Reserved,
      'try' =>                Try, Reserved,
    'tuple' =>              Tuple, Reserved,
  'typedef' =>            TypeDef, Reserved,
   'typeof' =>             Typeof, Reserved,
'undefined' =>          Undefined, Reserved,
   'unsafe' =>             Unsafe, Reserved,
      'use' =>                Use, Reserved,
    'using' =>              Using, Reserved,
 'volatile' =>           Volatile, Reserved,
    'where' =>              Where, Reserved,
  'virtual' =>            Virtual, Reserved,
    'yield' =>              Yield, Reserved,