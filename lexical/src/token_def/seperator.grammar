// fff-lang
// seperators definition file
//
// sep-def-file = comment { sep-def }
//      comment = '//' { <any char except line end chars> } line-end
//      sep-def = "'" <ascii-char> "'" '=>' identifier ',' cat-def
//      cat-def = identifier { '|' identifier }
//
// attention1: => should be surround with at lease 1 space at both side, to distinguish `'=>'`
// attention2: rerun token.py after modify this file, although I think this file almost won't change
//
// val =>               name, categories
   '!' =>         LogicalNot, Unary,
   '#' =>      AttributeSign, Reserved,
   '%' =>                Rem, Multiplicative,
   '&' =>             BitAnd, BitAnd,
   '(' =>    LeftParenthenes, Seperator,
   ')' =>   RightParenthenes, Seperator,
   '*' =>                Mul, Multiplicative,
   '+' =>                Add, Additive,
   ',' =>              Comma, Seperator,
   '-' =>                Sub, Additive | Unary,
   '.' =>                Dot, Seperator,
   '/' =>                Div, Multiplicative,
   ':' =>              Colon, Seperator,
   ';' =>          SemiColon, Seperator,
   '<' =>               Less, Relational,
   '=' =>             Assign, Assign,
   '>' =>              Great, Relational,
   '[' =>        LeftBracket, Seperator,
   ']' =>       RightBracket, Seperator,
   '^' =>             BitXor, BitXor,
   '{' =>          LeftBrace, Seperator,
   '|' =>              BitOr, BitOr,
   '}' =>         RightBrace, Seperator,
   '~' =>             BitNot, Unary,
  '!=' =>           NotEqual, Equality,
  '%=' =>          RemAssign, Assign,
  '&&' =>         LogicalAnd, LogicalAnd,
  '&=' =>       BitAndAssign, Assign,
  '*=' =>          MulAssign, Assign,
  '+=' =>          AddAssign, Assign,
  '-=' =>          SubAssign, Assign,
  '->' =>   NarrowRightArrow, Seperator,
  '..' =>              Range, Range,
  '/=' =>          DivAssign, Assign,
  '::' => NamespaceSeperator, Seperator,
  '<<' =>          ShiftLeft, Shift,
  '<=' =>          LessEqual, Relational,
  '==' =>              Equal, Equality,
  '=>' =>     WideRightArrow, Reserved,
  '>=' =>         GreatEqual, Relational,
  '>>' =>         ShiftRight, Shift,
  '^=' =>       BitXorAssign, Assign,
  '|=' =>        BitOrAssign, Assign,
  '||' =>          LogicalOr, LogicalOr,
 '<<=' =>    ShiftLeftAssign, Assign,
 '>>=' =>   ShiftRightAssign, Assign,